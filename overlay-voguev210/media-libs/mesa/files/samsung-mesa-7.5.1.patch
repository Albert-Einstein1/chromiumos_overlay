diff -u -r orig/Mesa-7.5.1/include/GL/internal/dri_interface.h patched/Mesa-7.5.1/include/GL/internal/dri_interface.h
--- orig/Mesa-7.5.1/include/GL/internal/dri_interface.h	2009-08-06 08:44:37.000000000 -0700
+++ patched/Mesa-7.5.1/include/GL/internal/dri_interface.h	2010-02-22 11:45:19.893387914 -0800
@@ -78,6 +78,10 @@
 typedef struct __DRIbufferRec			__DRIbuffer;
 typedef struct __DRIdri2ExtensionRec		__DRIdri2Extension;
 typedef struct __DRIdri2LoaderExtensionRec	__DRIdri2LoaderExtension;
+// PVR ----------------------------------------
+typedef struct __DRIpvrExtensionRec            __DRIpvrExtension;
+typedef struct __DRItexBufferExtensionRecPvr   __DRItexBufferExtensionPvr;
+// PVR ----------------------------------------
 typedef struct __DRI2flushExtensionRec	__DRI2flushExtension;
 
 /*@}*/
@@ -258,6 +262,37 @@
 			  __DRIdrawable *pDraw);
 };
 
+// PVR + PVR BTT RGB/A FIX  ---------------------------------------
+#define __DRI_TEX_BUFFER_PVR "DRI_TexBufferPvr"
+#define __DRI_TEX_BUFFER_PVR_VERSION 2
+struct __DRItexBufferExtensionRecPvr {
+    __DRIextension base;
+
+    /**
+     * Method to override base texture image with the contents of a
+     * __DRIdrawable. 
+     *
+     * For GLX_EXT_texture_from_pixmap with AIGLX.
+     */
+    void (*setTexBuffer)(__DRIcontext *pDRICtx,
+                        GLint target,
+                        GLint format,
+                        __DRIdrawable *pDraw);
+
+    /**
+     * Method to release base texture image of contents of a
+     * __DRIdrawable. 
+     *
+     * For GLX_EXT_texture_from_pixmap with AIGLX.
+     */
+    void (*releaseTexBuffer)(__DRIcontext *pDRICtx,
+                        GLint target,
+                        GLint format,
+                        __DRIdrawable *pDraw);
+};
+// PVR ---------------------------------------
+
+
 /**
  * Used by drivers that implement DRI2
  */
@@ -538,6 +573,20 @@
     int (*unbindContext)(__DRIcontext *ctx);
 };
 
+// PVR ----------------------------------------
+/**
+ * This extension defines the pvr DRI functionality.
+ */
+#define __DRI_PVR "DRI_Pvr"
+#define __DRI_PVR_VERSION 1
+
+struct __DRIpvrExtensionRec {
+    __DRIextension base;
+    void (*copySubBufferPrepare)(__DRIdrawable *drawable,int x,int y,int w,int h);
+
+};
+// PVR ----------------------------------------
+
 /**
  * Stored version of some component (i.e., server-side DRI module, kernel-side
  * DRM, etc.).
diff -u -r orig/Mesa-7.5.1/src/glx/x11/dri2_glx.c patched/Mesa-7.5.1/src/glx/x11/dri2_glx.c
--- orig/Mesa-7.5.1/src/glx/x11/dri2_glx.c	2009-08-31 16:13:07.000000000 -0700
+++ patched/Mesa-7.5.1/src/glx/x11/dri2_glx.c	2010-02-22 11:58:36.853388239 -0800
@@ -151,7 +151,7 @@
     const __DRIcoreExtension *core = pdraw->psc->core;
 
     (*core->destroyDrawable)(pdraw->driDrawable);
-    DRI2DestroyDrawable(pdraw->psc->dpy, pdraw->drawable);
+    DRI2DestroyDrawable(pdraw->psc->dpy, pdraw->xDrawable);
     Xfree(pdraw);
 }
 
@@ -181,7 +181,7 @@
 					config->driConfig, pdraw);
 
     if (!pdraw->base.driDrawable) {
-	DRI2DestroyDrawable(psc->dpy, drawable);
+        DRI2DestroyDrawable(psc->dpy, xDrawable);
 	Xfree(pdraw);
 	return NULL;
     }
@@ -200,6 +200,11 @@
     if (!priv->have_back)
     	return;
 
+    // PVR ----------------------------------------
+    if( pdraw->psc->pvr )
+        (*pdraw->psc->pvr->copySubBufferPrepare)(pdraw->driDrawable,x,y,width,height);
+    // PVR ----------------------------------------
+
     xrect.x = x;
     xrect.y = priv->height - y - height;
     xrect.width = width;
@@ -212,7 +217,7 @@
 
     region = XFixesCreateRegion(pdraw->psc->dpy, &xrect, 1);
     /* should get a fence ID back from here at some point */
-    DRI2CopyRegion(pdraw->psc->dpy, pdraw->drawable, region,
+    DRI2CopyRegion(pdraw->psc->dpy, pdraw->xDrawable, region,
 		   DRI2BufferFrontLeft, DRI2BufferBackLeft);
     XFixesDestroyRegion(pdraw->psc->dpy, region);
 }
@@ -245,7 +250,7 @@
 #endif
 
     region = XFixesCreateRegion(pdraw->psc->dpy, &xrect, 1);
-    DRI2CopyRegion(pdraw->psc->dpy, pdraw->drawable, region,
+    DRI2CopyRegion(pdraw->psc->dpy, pdraw->xDrawable, region,
 		   DRI2BufferFakeFrontLeft, DRI2BufferFrontLeft);
     XFixesDestroyRegion(pdraw->psc->dpy, region);
 }
@@ -270,7 +275,7 @@
 #endif
 
     region = XFixesCreateRegion(pdraw->psc->dpy, &xrect, 1);
-    DRI2CopyRegion(pdraw->psc->dpy, pdraw->drawable, region,
+    DRI2CopyRegion(pdraw->psc->dpy, pdraw->xDrawable, region,
 		   DRI2BufferFrontLeft, DRI2BufferFakeFrontLeft);
     XFixesDestroyRegion(pdraw->psc->dpy, region);
 }
@@ -485,7 +490,7 @@
 
     psp->destroyScreen = dri2DestroyScreen;
     psp->createContext = dri2CreateContext;
-    psp->createDrawable = dri2CreateDrawable;
+    psp->createDrawable = dri2CreateDrawable; 
     psp->swapBuffers = dri2SwapBuffers;
     psp->waitGL = dri2WaitGL;
     psp->waitX = dri2WaitX;
diff -u -r orig/Mesa-7.5.1/src/glx/x11/dri_common.c patched/Mesa-7.5.1/src/glx/x11/dri_common.c
--- orig/Mesa-7.5.1/src/glx/x11/dri_common.c	2009-08-31 16:13:07.000000000 -0700
+++ patched/Mesa-7.5.1/src/glx/x11/dri_common.c	2010-02-22 12:00:11.963387835 -0800
@@ -394,6 +394,20 @@
 	}
 #endif
 
+        // PVR ----------------------------------------
+#ifdef __DRI_TEX_BUFFER_PVR
+        if ((strcmp(extensions[i]->name, __DRI_TEX_BUFFER_PVR) == 0) && dri2) {
+            psc->texBufferPvr = (__DRItexBufferExtensionPvr *) extensions[i];
+            __glXEnableDirectExtension(psc, "GLX_EXT_texture_from_pixmap");
+        }
+#endif
+
+        if ((strcmp(extensions[i]->name, __DRI_PVR) == 0) && dri2) {
+            psc->pvr = (__DRIpvrExtension *) extensions[i];
+        }
+        // PVR ----------------------------------------
+
+
 #ifdef __DRI2_FLUSH
 	if ((strcmp(extensions[i]->name, __DRI2_FLUSH) == 0) && dri2) {
 	    psc->f = (__DRI2flushExtension *) extensions[i];
diff -u -r orig/Mesa-7.5.1/src/glx/x11/glxclient.h patched/Mesa-7.5.1/src/glx/x11/glxclient.h
--- orig/Mesa-7.5.1/src/glx/x11/glxclient.h	2009-08-31 16:13:07.000000000 -0700
+++ patched/Mesa-7.5.1/src/glx/x11/glxclient.h	2010-02-22 14:36:12.551200236 -0800
@@ -524,8 +524,15 @@
 #endif
 
 #ifdef __DRI_TEX_BUFFER
+        // PVR ----------------------------------------
     const __DRItexBufferExtension *texBuffer;
+    const __DRItexBufferExtensionPvr *texBufferPvr;
+
+        // PVR ----------------------------------------
 #endif
+        // PVR ----------------------------------------
+    const __DRIpvrExtension *pvr;
+        // PVR ----------------------------------------
 
 #ifdef __DRI2_FLUSH
     const __DRI2flushExtension *f;
diff -u -r orig/Mesa-7.5.1/src/glx/x11/glxcmds.c patched/Mesa-7.5.1/src/glx/x11/glxcmds.c
--- orig/Mesa-7.5.1/src/glx/x11/glxcmds.c	2009-08-31 16:13:07.000000000 -0700
+++ patched/Mesa-7.5.1/src/glx/x11/glxcmds.c	2010-02-23 16:35:47.663388764 -0800
@@ -2676,19 +2676,20 @@
 	__GLXDRIdrawable *pdraw = GetGLXDRIDrawable(dpy, drawable, NULL);
 
 	if (pdraw != NULL) {
-	    if (pdraw->psc->texBuffer->base.version >= 2 &&
-		pdraw->psc->texBuffer->setTexBuffer2 != NULL) {
-		(*pdraw->psc->texBuffer->setTexBuffer2)(gc->__driContext,
-							pdraw->textureTarget,
-							pdraw->textureFormat,
-							pdraw->driDrawable);
-	    } else {
-		(*pdraw->psc->texBuffer->setTexBuffer)(gc->__driContext,
-						       pdraw->textureTarget,
-						       pdraw->driDrawable);
-	    }
-	}
+        // PVR ----------------------------------------
+                if( pdraw->psc->texBufferPvr )
+                    (*pdraw->psc->texBufferPvr->setTexBuffer)(gc->__driContext,
+                                                   pdraw->textureTarget,
+                                                   pdraw->textureFormat,
+                                                   pdraw->driDrawable);
+                else if( pdraw->psc->texBuffer )
+                    (*pdraw->psc->texBuffer->setTexBuffer)(gc->__driContext,
+                                                   pdraw->textureTarget,
+                                                   pdraw->driDrawable);
+        // PVR ----------------------------------------
+
 	return;
+	}
     }
 #endif
 
@@ -2740,8 +2741,19 @@
 	return;
 
 #ifdef GLX_DIRECT_RENDERING
-    if (gc->driContext)
+    if (gc->driContext) {
+// PVR ----------------------------------------
+        __GLXDRIdrawable *pdraw = GetGLXDRIDrawable(dpy, drawable, NULL);
+
+        if (pdraw != NULL && pdraw->psc->texBufferPvr)
+            (*pdraw->psc->texBufferPvr->releaseTexBuffer)(gc->__driContext,
+                                                   pdraw->textureTarget,
+                                                   pdraw->textureFormat,
+                                                   pdraw->driDrawable);
+// PVR ----------------------------------------
+
 	return;
+      }
 #endif
 
     opcode = __glXSetupForCommand(dpy);

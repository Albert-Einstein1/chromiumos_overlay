#!/bin/bash

# Copyright (c) 2010 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

#
# This script burns U-Boot to your Seaboard. It looks for a U-Boot in your
# current directory (useful if you are building your own U-Boot), otherwise
# it grabs one from a standard location
#

# Load common constants.  This should be the first executable line.
# The path to common.sh should be relative to your script's location.
. "$(dirname "$0")/../../../scripts/common.sh"

# The board type is fixed for now - one day we will make this work for
# different variants
BOARD=tegra2_seaboard

# get build directory
if [ $INSIDE_CHROOT == 1 ]; then
  BUILD_BASE=/build
else
  BUILD_BASE=$DEFAULT_CHROOT_DIR/build
fi

# this directory contains our special files
variant=$SRC_ROOT/overlays/overlay-variant-tegra2-seaboard/burn-u-boot

# bootloader.bin is a special program used to burn things into flash
bin=$variant/bin/bootloader.bin

# The BCT file contains memory timings, firmware offset and length and a
# checksum of the firmware image. The BCT file is the first data read out
# of reset by the masked ROM.
bct=$variant/bct/default.bct

# this file describes the flash layout - it pulls in the boot loader file
cfg=$variant/flash.cfg

# locations where we will look for U-Boot
locations="./u-boot.bin $BUILD_BASE/$BOARD/u-boot/u-boot.bin"

# we need nvflash
if ! which nvflash >/dev/null ; then
  error "The nvflash utility was not found.  Run the following command in your"
  error "chroot: sudo -E emerge nvflash"
  exit
fi

# check each location until we find a U-Boot
flash=
for loc in $locations; do
  if [ -f "$loc" ]; then
    flash="$loc"
    break
  fi
done

if [ -z "$flash" ]; then
  error "No U-Boot binary found in specified locations:"
  error "$locations"
  exit
fi

# try to print a helpful name - the U-Boot version string
header=$(strings $flash | grep "U-Boot" | head -1 )
info "Using: $header"

# insert the correct file to flash
temp=$(mktemp)
eval "sed 's#^filename=.*\$#filename=$flash#' $cfg > $temp"

# customer data
odm=0x0d8011

# let's go!
sudo nvflash \
  --bct ${bct} \
  --setbct \
  --odmdata ${odm} \
  --configfile ${temp} \
  --create \
  --bl ${bin} \
  --go
if [ $? != 0 ]; then
  echo
  error "** Burn failed"
  error "Please make sure the Seaboard is connected by USB at the top using"
  error "the A-A cable. Hold down the 'recovery' button on the side, then press"
  error "and release 'reset'"
else
  info "$header written"
  info "Press reset to start your new U-Boot"
fi

rm -f $temp
